version: '3.4'

services:
  php:
    build:
      context: ./docker/php
      target: ${PROJECT_NAME}_php
      args:
        PHP_VERSION: ${PHP_VERSION}
#    depends_on:
#      - db
    env_file:
      - .env
    # Comment out these volumes in production
    volumes:
      - .:/var/www/html:rw,cached
      # If you develop on Linux, uncomment the following line to use a bind-mounted host directory instead
      - ./var:/var/www/html/var:rw
    environment:
      PHP_VERSION: ${PHP_VERSION}

#  api:
#    image: ${CONTAINER_REGISTRY_BASE}/nginx
#    build:
#      context: ./api
#      target: api_platform_nginx
#      cache_from:
#        - ${CONTAINER_REGISTRY_BASE}/php
#        - ${CONTAINER_REGISTRY_BASE}/nginx
#        - ${CONTAINER_REGISTRY_BASE}/varnish
#    depends_on:
#      - php
#    # Comment out this volume in production
#    volumes:
#      - ./api/public:/srv/api/public:ro
#    ports:
#      - "8080:80"
#
#  cache-proxy:
#    image: ${CONTAINER_REGISTRY_BASE}/varnish
#    build:
#      context: ./api
#      target: api_platform_varnish
#      cache_from:
#        - ${CONTAINER_REGISTRY_BASE}/php
#        - ${CONTAINER_REGISTRY_BASE}/nginx
#        - ${CONTAINER_REGISTRY_BASE}/varnish
#    depends_on:
#      - api
#    volumes:
#      - ./api/docker/varnish/conf:/usr/local/etc/varnish:ro
#    tmpfs:
#      - /usr/local/var/varnish:exec
#    ports:
#      - "8081:80"
#
#  db:
#    # In production, you may want to use a managed database service
#    image: postgres:9.6-alpine
#    environment:
#      - POSTGRES_DB=api
#      - POSTGRES_USER=api-platform
#      # You should definitely change the password in production
#      - POSTGRES_PASSWORD=!ChangeMe!
#    volumes:
#      - db-data:/var/lib/postgresql/data:rw
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./docker/db/data:/var/lib/postgresql/data:rw
#    ports:
#      - "5432:5432"
#
#  h2-proxy:
#    build:
#      context: ./docker/h2-proxy
#    depends_on:
#      - api
#      - cache-proxy
#    ports:
#      - "443:443"
#      - "444:444"
#      - "8443:8443"
#      - "8444:8444"
#
#volumes:
#  db-data: {}
